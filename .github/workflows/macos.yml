name: macOS Build and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Package macOS App
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          
      - name: Build macOS App
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace" 
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project" 
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          
          # Build for macOS
          xcodebuild -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -configuration Release -destination 'platform=macOS' -derivedDataPath ./build
          
      - name: Create DMG
        run: |
          # Install create-dmg
          brew install create-dmg
          
          # Get app name from the scheme
          APP_NAME=$(cat default)
          
          # Create directory for DMG content
          mkdir -p ./dmg-contents
          
          # Copy app to dmg-contents
          cp -R ./build/Build/Products/Release/${APP_NAME}.app ./dmg-contents/
          
          # Create DMG
          create-dmg \
            --volname "${APP_NAME}" \
            --volicon "./DevIconGenerator/Assets.xcassets/AppIcon.appiconset/mac1024.png" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "${APP_NAME}.app" 200 190 \
            --hide-extension "${APP_NAME}.app" \
            --app-drop-link 600 185 \
            "${APP_NAME}.dmg" \
            "./dmg-contents/"
            
      - name: Upload DMG as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DevIconGenerator-macOS
          path: ./*.dmg
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./*.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
